import matlab.io.xml.dom.*
% Define images to process
imageFileNames1 = {'D:\kalibracja\images\stereoFormatRGB\rgb (1).png',...
    'D:\kalibracja\images\stereoFormatRGB\RGB (1).png',...
    'D:\kalibracja\images\stereoFormatRGB\RGB (13).png',...
    'D:\kalibracja\images\stereoFormatRGB\RGB (16).png',...
    'D:\kalibracja\images\stereoFormatRGB\RGB (17).png',...
    'D:\kalibracja\images\stereoFormatRGB\RGB (18).png',...
    'D:\kalibracja\images\stereoFormatRGB\RGB (2).png',...
    'D:\kalibracja\images\stereoFormatRGB\RGB (37).png',...
    'D:\kalibracja\images\stereoFormatRGB\RGB (40).png',...
    'D:\kalibracja\images\stereoFormatRGB\RGB (42).png',...
    'D:\kalibracja\images\stereoFormatRGB\RGB (48).png',...
    'D:\kalibracja\images\stereoFormatRGB\RGB (50).png',...
    };
imageFileNames2 = {'D:\kalibracja\images\stereoFormatThermal\ir (1).png',...
    'D:\kalibracja\images\stereoFormatThermal\IR (1).png',...
    'D:\kalibracja\images\stereoFormatThermal\IR (13).png',...
    'D:\kalibracja\images\stereoFormatThermal\IR (16).png',...
    'D:\kalibracja\images\stereoFormatThermal\IR (17).png',...
    'D:\kalibracja\images\stereoFormatThermal\IR (18).png',...
    'D:\kalibracja\images\stereoFormatThermal\IR (2).png',...
    'D:\kalibracja\images\stereoFormatThermal\IR (37).png',...
    'D:\kalibracja\images\stereoFormatThermal\IR (40).png',...
    'D:\kalibracja\images\stereoFormatThermal\IR (42).png',...
    'D:\kalibracja\images\stereoFormatThermal\IR (48).png',...
    'D:\kalibracja\images\stereoFormatThermal\IR (50).png',...
    };

% Detect calibration pattern in images
detector = vision.calibration.stereo.CheckerboardDetector();
[imagePoints, imagesUsed] = detectPatternPoints(detector, imageFileNames1, imageFileNames2);

% Generate world coordinates for the planar patten keypoints
squareSize = 20;  % in units of 'millimeters'
worldPoints = generateWorldPoints(detector, 'SquareSize', squareSize);

% Read one of the images from the first stereo pair
I1 = imread(imageFileNames1{1});
[mrows, ncols, ~] = size(I1);

% Calibrate the camera
[stereoParams, pairsUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

% View reprojection errors
h1=figure; showReprojectionErrors(stereoParams);

% Visualize pattern locations
h2=figure; showExtrinsics(stereoParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, stereoParams);

% You can use the calibration data to rectify stereo images.
I2 = imread(imageFileNames2{1});
[J1, J2] = rectifyStereoImages(I1, I2, stereoParams);

rgb = imread("D:\kalibracja\images\stereoFormatRGB\RGB (21).png")
thermal =  imread("D:\kalibracja\images\stereoFormatThermal\IR (21).png")

[intrinsicMatrix1,distortionCoefficients1,intrinsicMatrix2,distortionCoefficients2,rotationOfCamera2,translationOfCamera2] = stereoParametersToOpenCV(stereoParams)

save('calibrationParams', 'intrinsicMatrix1', 'distortionCoefficients1', 'intrinsicMatrix2', 'distortionCoefficients2', 'rotationOfCamera2', 'translationOfCamera2')
